---
  # What this does:
  # - Remove mysql bind address
  # - Create an aegir user with specified authorized_key
  # - Create a mysql superuser limited to specified host
  # - Allows aegir user to restart apache queue
  #
  # TODO:
  # - aegir apache2 symlink? can't create before "upstream" server does its thing with rsync...

  - name: Install required packages
    apt: pkg={{item}} state=installed update_cache=true
    with_items:
      - rsync
      - php5-curl
      - php5-fpm
      - php5-gd
      - php5-mysql

  - group: name=aegir state=present

  - user: name=aegir groups="aegir,www-data" home=/var/aegir shell=/bin/bash
  - authorized_key: user=aegir key="{{ aegirPubKey }}"

  # Don't do this on full-blown aegir nodes! This breaks the security that Aegir would try to implement.
  - user: name=www-data groups="aegir,www-data"

  - name: Create mod-rewrite symlink
    file: src=/etc/apache2/mods-available/rewrite.load dest=/etc/apache2/mods-enabled/rewrite.load state=link
    notify: Restart Apache

  # This file is the default MySQL config with no bind address
  - name: Create MySQL config
    when: mysqlinstalled|success
    template: src=mysql-my.cnf.j2 dest=/etc/mysql/my.cnf mode=755 owner=root group=root
    notify:
      - Restart MySQL

  - name: Give aegir user sudo apache2ctl
    template: src=sudo-aegir dest=/etc/sudoers.d/aegir mode=440 owner=root group=root

  - name: Generate a password for a new DB user
    shell: pwgen 15 1 > /var/aegir/.mysql.pass
    when: mysqld_exists|failed

  # TODO: Restrict aegir mysql user to Aegir hub
  - name: Create the aegir MySQL DB user
    shell: mysql -u root -p`cat /root/.mysql.root` -e "CREATE USER 'aegir'@'{{ aegirHub }}' IDENTIFIED BY '`cat /var/aegir/.mysql.pass`';" 
    when: mysqld_exists|failed

  - name: Grant privileges to the aegir user
    shell: mysql -u root -p`cat /root/.mysql.root` -e "GRANT ALL PRIVILEGES ON *.* TO 'aegir'@'{{ aegirHub }}' WITH GRANT OPTION;" 
    when: mysqld_exists|failed

